<Window x:Class="Ivanov_WPF_EF_MovieCatalog.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Ivanov_WPF_EF_MovieCatalog"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Title="Ivanov_WPF_EF_MovieCatalog" Height="650" Width="1120" MinWidth="1120" MinHeight="650" WindowStartupLocation="CenterScreen" Icon="Icons/icon_1.ico">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#0C0715"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#0C0715"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#EF2754"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#EF2754"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF6F8F"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF6F8F"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        
        <!--red button style-->
        <Style x:Key="redButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--rounded button style-->
        <Style x:Key="roundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#EF2754"/>
            <Setter Property="BorderBrush" Value="#EF2754"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--group style-->
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander x:Name="exp" IsExpanded="True" Background="White" Foreground="Black">
                            <Expander.Header>
                                <TextBlock Text="{Binding Name}" />
                            </Expander.Header>
                            <ItemsPresenter />
                        </Expander>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!--main grid-->
    <Grid x:Name="back_grid" Background="#211F2E">

        <!--navigation panel-->
        <Grid x:Name="navig_panel"
              HorizontalAlignment="Left"
              Width="200"
              Background="#0C0715"
              RenderTransformOrigin="0.5, 0.5">

            <!--navicon panel-->
            <Grid x:Name="navicon_panel"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Height="40"
                  Width="200">

                <StackPanel Orientation="Horizontal" Width="200">
                    <fa:ImageAwesome Icon="Bars" 
                                 Height="25"
                                 Width="25"
                                 VerticalAlignment="Top" 
                                 HorizontalAlignment="Left"
                                 Margin="17,10,0,0"
                                 Foreground="White" MouseDown="Navicon_MouseDown">
                    </fa:ImageAwesome>

                    <TextBlock Text="M E N U"
                           Foreground="White"
                           FontSize="24"

                           Background="Transparent"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center" 
                           Margin="25,5,0,6">
                    </TextBlock>
                </StackPanel>
            </Grid>

            <!--button panel-->
            <Grid x:Name="button_panel"
                  HorizontalAlignment="Left"
                  Width="200"
                  Margin="0,40,0,0">

                <!--insert-->
                <Button x:Name="insertButton"
                        Height="50"
                        VerticalAlignment="Top"
                        Margin="0,50,0,0"
                        BorderThickness="0" Style="{DynamicResource redButtonStyle}" Click="insertButton_Click">
                    <StackPanel Orientation="Horizontal" Width="200">
                        <fa:ImageAwesome Icon="Plus"
                                     Height="23"
                                     Width="23"
                                     VerticalAlignment="Center" 
                                     HorizontalAlignment="Left"
                                     Margin="17,0,0,0"
                                     Foreground="White">
                        </fa:ImageAwesome>
                        <TextBlock Text="Insert"
                                   FontSize="24"
                                   Margin="25,0,0,0"
                                   Foreground="White" 
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" 
                                   FontFamily="Arial">
                        </TextBlock>
                    </StackPanel>
                </Button>

                <!--edit-->
                <Button x:Name="editButton"
                        Height="50"
                        VerticalAlignment="Top"
                        Margin="0,100,0,0"
                        BorderThickness="0" Style="{DynamicResource redButtonStyle}" Click="editButton_Click">
                    <StackPanel Orientation="Horizontal" Width="200">
                        <fa:ImageAwesome Icon="Pencil"
                                     Height="23"
                                     Width="23"
                                     VerticalAlignment="Center" 
                                     HorizontalAlignment="Left"
                                     Margin="17,0,0,0"
                                     Foreground="White">
                        </fa:ImageAwesome>
                        <TextBlock Text="Edit"
                                   FontSize="24"
                                   Margin="25,0,0,0"
                                   Foreground="White" 
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" 
                                   FontFamily="Arial">
                        </TextBlock>
                    </StackPanel>
                </Button>

                <!--show-->
                <Button x:Name="showButton"
                        Height="50"
                        VerticalAlignment="Top"
                        Margin="0,150,0,0"
                        BorderThickness="0" Style="{DynamicResource redButtonStyle}" Click="showButton_Click">
                    <StackPanel Orientation="Horizontal" Width="200">
                        <fa:ImageAwesome Icon="Eye"
                                     Height="23"
                                     Width="23"
                                     VerticalAlignment="Center" 
                                     HorizontalAlignment="Left"
                                     Margin="17,0,0,0"
                                     Foreground="White">
                        </fa:ImageAwesome>
                        <TextBlock Text="Show"
                                   FontSize="24"
                                   Margin="25,0,0,0"
                                   Foreground="White" 
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" 
                                   FontFamily="Arial">
                        </TextBlock>
                    </StackPanel>
                </Button>

                <!--delete-->
                <Button x:Name="deleteButton"
                        Height="50"
                        VerticalAlignment="Top"
                        Margin="0,200,0,0"
                        BorderThickness="0" Style="{DynamicResource redButtonStyle}" Click="deleteButton_Click">
                    <StackPanel Orientation="Horizontal" Width="200">
                        <fa:ImageAwesome Icon="Times"
                                     Height="23"
                                     Width="23"
                                     VerticalAlignment="Center" 
                                     HorizontalAlignment="Left"
                                     Margin="17,0,0,0"
                                     Foreground="White">
                        </fa:ImageAwesome>
                        <TextBlock Text="Delete"
                                   FontSize="24"
                                   Margin="25,0,0,0"
                                   Foreground="White" 
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" 
                                   FontFamily="Arial">
                        </TextBlock>
                    </StackPanel>
                </Button>

                <!--exit-->
                <Button x:Name="exitButton"
                        Height="50"
                        VerticalAlignment="Bottom"
                        BorderThickness="0" Style="{DynamicResource redButtonStyle}" Click="exitButton_Click">
                    <StackPanel Orientation="Horizontal" Width="200">
                        <fa:ImageAwesome Icon="PowerOff"
                                     Height="23"
                                     Width="23"
                                     VerticalAlignment="Center" 
                                     HorizontalAlignment="Left"
                                     Margin="17,0,0,0"
                                     Foreground="White">
                        </fa:ImageAwesome>
                        <TextBlock Text="Exit"
                                   FontSize="24"
                                   Margin="25,0,0,0"
                                   Foreground="White" 
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Center" 
                                   FontFamily="Arial">
                        </TextBlock>
                    </StackPanel>
                </Button>
                
            </Grid>
            
        </Grid>

        <!--top panel-->
        <Grid Background="#161523" 
              VerticalAlignment="Top"
              Height="40"
              Margin="0,0,0,0" 
              Panel.ZIndex="-1">

            <Grid x:Name="top_panel"
                  Height="40"
                  VerticalAlignment="Top"
                  Margin="200,0,0,0">
                
                <!--actors-->
                <Button x:Name="actorsB" Content="Actors" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top"
                        Margin="10,9,0,0" 
                        Width="90"
                        Height="24"
                        Style="{DynamicResource roundedButtonStyle}" Click="actorsB_Click">
                </Button>

                <!--movies-->
                <Button x:Name="moviesB" Content="Movies" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top"
                        Margin="110,9,0,0" 
                        Width="90"
                        Height="24"
                        Style="{DynamicResource roundedButtonStyle}" Click="moviesB_Click">
                </Button>

                <!--show all-->
                <Button x:Name="showAllButton" Content="Show all" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Top"
                        Margin="210,9,0,0" 
                        Width="90"
                        Height="24"
                        Background="#938FBD"
                        Style="{DynamicResource roundedButtonStyle}" Click="showAllButton_Click">
                </Button>

                <!--actor filter-->
                <ComboBox x:Name="actorFilterCB" HorizontalAlignment="Right" 
                          VerticalAlignment="Top" 
                          Margin="0,8,415,0" 
                          Width="180">
                </ComboBox>

                <Button x:Name="actorFilterB" Content="Actor filter" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Top"
                        Margin="0,9,315,0" 
                        Width="90"
                        Height="24"
                        Background="#938FBD"
                        Style="{DynamicResource roundedButtonStyle}" Click="actorFilterB_Click">
                </Button>

                <!--movie filter-->
                <ComboBox x:Name="movieFilterCB" HorizontalAlignment="Right" 
                          VerticalAlignment="Top" 
                          Margin="0,8,110,0" 
                          Width="180">
                </ComboBox>

                <Button x:Name="movieFilterB" Content="Movie filter" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Top"
                        Margin="0,9,10,0" 
                        Width="90"
                        Height="24"
                        Background="#938FBD"
                        Style="{DynamicResource roundedButtonStyle}" Click="movieFilterB_Click">
                </Button>
            </Grid>      
            
        </Grid>

        <!--data grid-->
        <Grid x:Name="data_panel"
              HorizontalAlignment="Stretch"
              Margin="200,40,0,0">

            <DataGrid x:Name="dataGrid"
                          Background="#211F2E" 
                          BorderBrush="{x:Null}" 
                          HorizontalGridLinesBrush="Gray" 
                          VerticalGridLinesBrush="Gray"
                          AutoGenerateColumns="False">

                <DataGrid.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                    </GroupStyle>
                </DataGrid.GroupStyle>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Photo" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <Image Source="{Binding Photo}" Height="90" Width="60"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="actor_ID" Binding="{Binding Path=a_ID}" Width="60"/>
                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" Width="200" />
                    <DataGridTextColumn Header="Age" Binding="{Binding Path=Age, UpdateSourceTrigger=PropertyChanged}" Width="60" />
                    <DataGridTextColumn Header="Birthdate" Binding="{Binding Path=Birthdate, UpdateSourceTrigger=PropertyChanged}" Width="200" />
                    <DataGridTextColumn Header="a_Country"  Binding="{Binding Path=a_Country, UpdateSourceTrigger=PropertyChanged}" Width="120" />

                    <DataGridTemplateColumn Header="Poster" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <Image Source="{Binding Poster}" Height="90" Width="60"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="m_ID"  Binding="{Binding Path=m_ID, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="70" />
                    <DataGridTextColumn Header="Title"  Binding="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" Width="Auto" />
                    <DataGridTextColumn Header="m_Year"  Binding="{Binding Path=m_Year, UpdateSourceTrigger=PropertyChanged}" Width="60" />
                    <DataGridTextColumn Header="Budget"  Binding="{Binding Path=Budget, UpdateSourceTrigger=PropertyChanged}" Width="120" />
                    <DataGridTextColumn Header="m_Country"  Binding="{Binding Path=m_Country, UpdateSourceTrigger=PropertyChanged}" Width="Auto" />
                    <DataGridTextColumn Header="Description"  Binding="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged}" Width="Auto" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</Window>
